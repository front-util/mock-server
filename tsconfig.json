{
  "compilerOptions": {
    "jsxFactory": "Html.createElement",
    "jsxFragmentFactory": "Html.Fragment",
    "paths": {
      "#public/*": ["public/*"],
      "#app": ["src/app/index.ts"],
      "#ui/*": ["src/ui/*"],
      "#libs/*": ["src/libs/*"],
    },                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
    "types": ["bun-types"],                                      /* Specify type package names to be included without being referenced in a source file. */
    "resolveJsonModule": true,                        /* Enable importing .json files. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "skipLibCheck": true,                                 /* Skip type checking all .d.ts files. */
    "importHelpers": true,
    "target": "esnext",                       /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "esnext",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "allowJs": true,                       /* Allow javascript files to be compiled. */
    "jsx": "react",                        /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "declaration": true,                      /* Generates corresponding '.d.ts' file. */
    "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
    "outDir": "dist",                         /* Redirect output structure to the directory. */
    "noImplicitAny": true,                    /* Raise error on expressions and declarations with an implied 'any' type. */
    "moduleResolution": "bundler",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": ".",
    "rootDir": ".",
    "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
  },
  "include": [
    "./src/**/*",
    "./__tests__/**/*",
    "build.ts",
    "./bin/**/*",
  ]
}
